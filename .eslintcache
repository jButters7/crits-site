[{"/Users/jacobbutters/Documents/Personal Projects/crits-site/src/index.js":"1","/Users/jacobbutters/Documents/Personal Projects/crits-site/src/App.js":"2","/Users/jacobbutters/Documents/Personal Projects/crits-site/src/reportWebVitals.js":"3","/Users/jacobbutters/Documents/Personal Projects/crits-site/src/routes.js":"4","/Users/jacobbutters/Documents/Personal Projects/crits-site/src/Components/Auth.js":"5","/Users/jacobbutters/Documents/Personal Projects/crits-site/src/Components/Dashboard.js":"6","/Users/jacobbutters/Documents/Personal Projects/crits-site/src/Components/Complete.js":"7"},{"size":675,"mtime":1607986380780,"results":"8","hashOfConfig":"9"},{"size":198,"mtime":1607985117317,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1607983083498,"results":"11","hashOfConfig":"9"},{"size":417,"mtime":1608053776236,"results":"12","hashOfConfig":"9"},{"size":2040,"mtime":1608226733468,"results":"13","hashOfConfig":"9"},{"size":2600,"mtime":1608055985186,"results":"14","hashOfConfig":"9"},{"size":405,"mtime":1608054903850,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1kmhjpr",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"/Users/jacobbutters/Documents/Personal Projects/crits-site/src/index.js",[],["33","34"],"/Users/jacobbutters/Documents/Personal Projects/crits-site/src/App.js",[],"/Users/jacobbutters/Documents/Personal Projects/crits-site/src/reportWebVitals.js",[],"/Users/jacobbutters/Documents/Personal Projects/crits-site/src/routes.js",[],"/Users/jacobbutters/Documents/Personal Projects/crits-site/src/Components/Auth.js",["35"],"/Users/jacobbutters/Documents/Personal Projects/crits-site/src/Components/Dashboard.js",["36"],"import React, { useState } from 'react';\nimport loading2Gif from '../loading2.gif';\nimport '../Dashboard.css';\n\n\nconst Dashboard = (props) => {\n  const [verificationKey, setVerificationKey] = useState('');\n  const [verifying, setVerifying] = useState(false);\n  const [confirmation, setConfirmation] = useState(false);\n  const [requestTitle, setRequestTitle] = useState('');\n  const [verificationCorrect, setVerificationCorrect] = useState(false);\n  const [userFeedback, setUserFeedback] = useState('')\n  let [wrongAttempts, setWrongAttempts] = useState(0);\n\n  const askForConfirmation = (request) => {\n    setRequestTitle(request);\n    setConfirmation(true);\n  }\n\n  const cancelVerification = () => {\n    setVerifying(false);\n    setConfirmation(false);\n  }\n\n  const runExecution = () => {\n    if (verificationKey === 'Qh7#') {\n      setVerificationCorrect(true);\n      setTimeout(() => {\n        props.history.push('/complete')\n      }, 5000)\n    } else {\n      setUserFeedback('Incorrect verification key')\n      setWrongAttempts(wrongAttempts + 1)\n    }\n  }\n\n  return (\n    <div className='dashboard-container'>\n      {verificationCorrect ? <img src={loading2Gif} />\n        :\n        <div>\n          {verifying ?\n            <div>\n              <input placeholder='4 character long verification key' type='password' onChange={(e) => setVerificationKey(e.target.value)}></input>\n              <div className='user-feedback'>{userFeedback}</div>\n              <button onClick={() => runExecution()}>Execute</button>\n              <button onClick={() => cancelVerification()}>Cancel Verification</button>\n            </div>\n            :\n            <div>\n              {confirmation ?\n                <div>\n                  <h2 className='dashboard-text confirm-message'>{`Are you sure you want to ${requestTitle}?`}</h2>\n                  <button onClick={() => setVerifying(true)}>YES</button>\n                  <button onClick={() => setConfirmation(false)}>NO</button>\n                </div>\n                :\n                <div>\n                  <h1 className='dashboard-text title'>Hello Mr. Crit</h1>\n                  <h2 className='dashboard-text'>What can we do for you today?</h2>\n                  <button onClick={() => askForConfirmation('Initiate Market Failure')}>Initiate Market Failure</button>\n                  <button onClick={() => askForConfirmation('Exterminate the Dark Web and erase all evidence')}>Exterminate Dark Web</button>\n                </div>\n              }\n            </div>\n          }\n        </div>\n      }\n    </div>\n  )\n};\n\n\n\nexport default Dashboard;","/Users/jacobbutters/Documents/Personal Projects/crits-site/src/Components/Complete.js",["37"],"import React, { useState } from 'react';\nimport '../Dashboard.css';\n\n\nconst Complete = (props) => {\n  return (\n    <div className='dashboard-container'>\n      <h1 className='dashboard-text'>Thanks for playing! </h1>\n      <h3 className='dashboard-text'>You have won</h3>\n      <h5 className='dashboard-text'>Now get out of here before Mr. Crit finds you!!!</h5>\n    </div>\n\n  )\n}\n\nexport default Complete;",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":35,"column":9,"nodeType":"44","endLine":35,"endColumn":85},{"ruleId":"42","severity":1,"message":"43","line":39,"column":30,"nodeType":"44","endLine":39,"endColumn":55},{"ruleId":"45","severity":1,"message":"46","line":1,"column":17,"nodeType":"47","messageId":"48","endLine":1,"endColumn":25},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]